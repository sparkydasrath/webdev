{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/Ops.ts","src/ts/app.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { IOps } from \"./interfaces/IOps\";\r\n\r\nclass Ops implements IOps {\r\n    add(x: number, y: number): number {\r\n        return x + y;\r\n    }\r\n    subtract(x: number, y: number): number {\r\n        return x - y;\r\n    }\r\n    multiply(x: number, y: number): number {\r\n        return x * y;\r\n    }\r\n    divide(x: number, y: number): number {\r\n        if (y === 0) return 0;\r\n        return x / y;\r\n    }\r\n    plusMinus(x: number): number {\r\n        return (-1) * x;\r\n    }\r\n}\r\n\r\nexport default Ops;","import Ops from \"./Ops\";\r\n\r\nenum OperatorType {\r\n    None = \"\",\r\n    Add = \"Add\",\r\n    Subtract = \"Subtract\",\r\n    Multiply = \"Multiply\",\r\n    Divide = \"Divide\",\r\n    PlusMinus = \"PlusMinus\",\r\n    Equal = \"Equal\"\r\n}\r\n\r\nclass Dom {\r\n    buttonContainer: HTMLElement | null | undefined;\r\n    addButton: HTMLButtonElement | null | undefined;\r\n    subtractButton: HTMLButtonElement | null | undefined;\r\n    multiplyButton: HTMLButtonElement | null | undefined;\r\n    divideButton: HTMLButtonElement | null | undefined;\r\n    negateButton: HTMLButtonElement | null | undefined;\r\n    equalButton: HTMLButtonElement | null | undefined;\r\n    resultDisplay: HTMLElement | null | undefined;\r\n    summaryDisplay: HTMLElement | null | undefined;\r\n}\r\n\r\nclass MainView {\r\n\r\n    clickEvent: string = \"click\";\r\n    buttonContainerClassName: string = \".btn-container\";\r\n    resultDisplayClassName: string = \".result-display\";\r\n    summaryDisplayClassName: string = \".summary-display\";\r\n\r\n    leftAsString: string = \"\";\r\n    left: number = 0;\r\n    right: number = 0;\r\n    rightAsString: string = \"\";\r\n    total: number = 0;\r\n    opType: OperatorType = OperatorType.None;\r\n    opTypeHtml: string = \"\";\r\n\r\n    private dom: Dom = new Dom();\r\n    private ops: Ops = new Ops();\r\n\r\n    private cacheDom(): void {\r\n        this.dom.buttonContainer = <HTMLElement>document.querySelector(this.buttonContainerClassName);\r\n        this.dom.summaryDisplay = <HTMLElement>document.querySelector(this.summaryDisplayClassName);\r\n        this.dom.resultDisplay = <HTMLElement>document.querySelector(this.resultDisplayClassName);\r\n    }\r\n\r\n    public bindEvents() {\r\n        if (this.dom.buttonContainer !== null && this.dom.buttonContainer !== undefined) {\r\n            this.dom.buttonContainer.addEventListener(this.clickEvent, this.handleBtnContainerClick);\r\n        }\r\n    }\r\n\r\n    public handleBtnContainerClick = (event: Event): void => {\r\n        // had to do the event handler this way in order to pass along the correct 'this'\r\n        //  context to it\r\n        // see: https://stackoverflow.com/questions/18423410/typescript-retain-scope-in-event-listener\r\n        let srcButton = <HTMLButtonElement>event.srcElement;\r\n        if (srcButton === null || srcButton === undefined) {\r\n            console.error(\"Can't find the button that was clicked\");\r\n            return;\r\n        }\r\n\r\n        let srcButtonValue = srcButton.innerHTML;\r\n        if (srcButtonValue >= \"0\" && srcButtonValue <= \"9\")\r\n            this.handleNumberButtonPressed(srcButtonValue);\r\n        else {\r\n            // get the data that knows what operator button was pressed \r\n            this.opTypeHtml = srcButtonValue;\r\n            this.handleOperatorButtonPressed(srcButton.getAttribute(\"data-opType\"));\r\n        };\r\n    }\r\n\r\n    private handleOperatorButtonPressed(opPressed: string | null): void {\r\n        if (opPressed === null) {\r\n            console.error(\"Operation selected is null\");\r\n            return;\r\n        }\r\n        else if (opPressed === OperatorType.Equal) {\r\n            this.computeTotal();\r\n            this.clearSummaryDisplay();\r\n            return;\r\n        }\r\n        else if (this.opType === OperatorType.None) {\r\n            this.opType = <OperatorType>opPressed;\r\n            this.updateSummaryDisplay();\r\n            console.log(this.opType);\r\n            return;\r\n        }\r\n        else {\r\n            this.computeTotal();\r\n            this.opType = <OperatorType>opPressed;\r\n            console.log(this.opType);\r\n            return;\r\n        }\r\n    }\r\n\r\n    private computeTotal(): void {\r\n\r\n        this.left = Number(this.leftAsString);\r\n        this.right = Number(this.rightAsString);\r\n\r\n        switch (this.opType) {\r\n            case (OperatorType.Add): {\r\n                this.total = this.ops.add(this.left, this.right);\r\n                break;\r\n            }\r\n            case (OperatorType.Subtract): {\r\n                this.total = this.ops.subtract(this.left, this.right);\r\n                break;\r\n            }\r\n            case (OperatorType.Multiply): {\r\n                this.total = this.ops.multiply(this.left, this.right);\r\n                break;\r\n            }\r\n            case (OperatorType.Divide): {\r\n                this.total = this.ops.divide(this.left, this.right);\r\n                break;\r\n            }\r\n            case (OperatorType.PlusMinus): {\r\n                //  need to display negative number\r\n                break;\r\n            }\r\n\r\n            default: {\r\n                console.log(`Operator ${this.opType} is not defined`);\r\n                break;\r\n            }\r\n        }\r\n        this.updateSummaryDisplay();\r\n        this.updateLeftAndRightValues();\r\n        this.displayResult();\r\n    }\r\n\r\n    private displayResult(): void {\r\n        if (this.dom.resultDisplay !== null && this.dom.resultDisplay !== undefined) {\r\n            this.dom.resultDisplay.textContent = `${this.total}`;\r\n        }\r\n    }\r\n\r\n    private displayLeft(): void {\r\n        if (this.dom.resultDisplay !== null && this.dom.resultDisplay !== undefined) {\r\n            this.dom.resultDisplay.textContent = this.leftAsString;\r\n        }\r\n    }\r\n\r\n    private displayRight(): void {\r\n        if (this.dom.resultDisplay !== null && this.dom.resultDisplay !== undefined) {\r\n            this.dom.resultDisplay.textContent = this.rightAsString;\r\n        }\r\n    }\r\n    private clearSummaryDisplay(): void {\r\n        if (this.dom.summaryDisplay !== null && this.dom.summaryDisplay !== undefined) {\r\n            this.dom.summaryDisplay.innerHTML = \"\"\r\n        };\r\n    }\r\n\r\n    private updateSummaryDisplay(): void {\r\n        if (this.dom.summaryDisplay === null || this.dom.summaryDisplay === undefined) {\r\n            console.error(\"Unable to populate summary value\");\r\n            return;\r\n        }\r\n\r\n        if (this.leftAsString === \"\") {\r\n            this.dom.summaryDisplay.innerHTML += this.leftAsString + \" \" + this.opTypeHtml;\r\n        }\r\n        else if (this.rightAsString !== \"\") {\r\n            this.dom.summaryDisplay.innerHTML += this.rightAsString + \" \" + this.opTypeHtml;\r\n        }\r\n    }\r\n\r\n    private updateLeftAndRightValues() {\r\n        this.leftAsString = this.total.toString();\r\n        this.left = this.total;\r\n        this.rightAsString = \"\";\r\n        this.right = 0;\r\n    }\r\n\r\n    private handleNumberButtonPressed(pressedNumber: string): void {\r\n\r\n        if (this.leftAsString === \"\" || this.opType === OperatorType.None) {\r\n            this.leftAsString += pressedNumber;\r\n            this.displayLeft();\r\n        }\r\n        else {\r\n            this.rightAsString += pressedNumber;\r\n            this.displayRight();\r\n        }\r\n    }\r\n\r\n    public init() {\r\n        this.cacheDom();\r\n        this.bindEvents();\r\n    }\r\n}\r\n\r\n(function () {\r\n    let main = new MainView();\r\n    main.init()\r\n}());"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvdHMvT3BzLnRzIiwic3JjL3RzL2FwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDRUE7SUFDSSxHQUFHLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFDcEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pCLENBQUM7SUFDRCxRQUFRLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFDekIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pCLENBQUM7SUFDRCxRQUFRLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFDekIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pCLENBQUM7SUFDRCxNQUFNLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFDdkIsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3RCLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNqQixDQUFDO0lBQ0QsU0FBUyxDQUFDLENBQVM7UUFDZixPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDcEIsQ0FBQztDQUNKO0FBRUQsa0JBQWUsR0FBRyxDQUFDOzs7Ozs7O0FDckJuQixnREFBd0I7QUFFeEIsSUFBSyxZQVFKO0FBUkQsV0FBSyxZQUFZO0lBQ2IseUJBQVMsQ0FBQTtJQUNULDJCQUFXLENBQUE7SUFDWCxxQ0FBcUIsQ0FBQTtJQUNyQixxQ0FBcUIsQ0FBQTtJQUNyQixpQ0FBaUIsQ0FBQTtJQUNqQix1Q0FBdUIsQ0FBQTtJQUN2QiwrQkFBZSxDQUFBO0FBQ25CLENBQUMsRUFSSSxZQUFZLEtBQVosWUFBWSxRQVFoQjtBQUVEO0NBVUM7QUFFRDtJQUFBO1FBRUksZUFBVSxHQUFXLE9BQU8sQ0FBQztRQUM3Qiw2QkFBd0IsR0FBVyxnQkFBZ0IsQ0FBQztRQUNwRCwyQkFBc0IsR0FBVyxpQkFBaUIsQ0FBQztRQUNuRCw0QkFBdUIsR0FBVyxr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YUFBYSxDQUFDO1lBQ25DLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUN0QjthQUNJO1lBQ0QsSUFBSSxDQUFDLGFBQWEsSUFBSSxhQUFhLENBQUM7WUFDcEMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3ZCO0lBQ0wsQ0FBQztJQUVNLElBQUk7UUFDUCxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3RCLENBQUM7Q0FDSjtBQUVELENBQUM7SUFDRyxJQUFJLElBQUksR0FBRyxJQUFJLFFBQVEsRUFBRSxDQUFDO0lBQzFCLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQTtBQUNmLENBQUMsRUFBRSxDQUFDLENBQUMiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJpbXBvcnQgeyBJT3BzIH0gZnJvbSBcIi4vaW50ZXJmYWNlcy9JT3BzXCI7XHJcblxyXG5jbGFzcyBPcHMgaW1wbGVtZW50cyBJT3BzIHtcclxuICAgIGFkZCh4OiBudW1iZXIsIHk6IG51bWJlcik6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHggKyB5O1xyXG4gICAgfVxyXG4gICAgc3VidHJhY3QoeDogbnVtYmVyLCB5OiBudW1iZXIpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB4IC0geTtcclxuICAgIH1cclxuICAgIG11bHRpcGx5KHg6IG51bWJlciwgeTogbnVtYmVyKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4geCAqIHk7XHJcbiAgICB9XHJcbiAgICBkaXZpZGUoeDogbnVtYmVyLCB5OiBudW1iZXIpOiBudW1iZXIge1xyXG4gICAgICAgIGlmICh5ID09PSAwKSByZXR1cm4gMDtcclxuICAgICAgICByZXR1cm4geCAvIHk7XHJcbiAgICB9XHJcbiAgICBwbHVzTWludXMoeDogbnVtYmVyKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gKC0xKSAqIHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE9wczsiLCJpbXBvcnQgT3BzIGZyb20gXCIuL09wc1wiO1xyXG5cclxuZW51bSBPcGVyYXRvclR5cGUge1xyXG4gICAgTm9uZSA9IFwiXCIsXHJcbiAgICBBZGQgPSBcIkFkZFwiLFxyXG4gICAgU3VidHJhY3QgPSBcIlN1YnRyYWN0XCIsXHJcbiAgICBNdWx0aXBseSA9IFwiTXVsdGlwbHlcIixcclxuICAgIERpdmlkZSA9IFwiRGl2aWRlXCIsXHJcbiAgICBQbHVzTWludXMgPSBcIlBsdXNNaW51c1wiLFxyXG4gICAgRXF1YWwgPSBcIkVxdWFsXCJcclxufVxyXG5cclxuY2xhc3MgRG9tIHtcclxuICAgIGJ1dHRvbkNvbnRhaW5lcjogSFRNTEVsZW1lbnQgfCBudWxsIHwgdW5kZWZpbmVkO1xyXG4gICAgYWRkQnV0dG9uOiBIVE1MQnV0dG9uRWxlbWVudCB8IG51bGwgfCB1bmRlZmluZWQ7XHJcbiAgICBzdWJ0cmFjdEJ1dHRvbjogSFRNTEJ1dHRvbkVsZW1lbnQgfCBudWxsIHwgdW5kZWZpbmVkO1xyXG4gICAgbXVsdGlwbHlCdXR0b246IEhUTUxCdXR0b25FbGVtZW50IHwgbnVsbCB8IHVuZGVmaW5lZDtcclxuICAgIGRpdmlkZUJ1dHRvbjogSFRNTEJ1dHRvbkVsZW1lbnQgfCBudWxsIHwgdW5kZWZpbmVkO1xyXG4gICAgbmVnYXRlQnV0dG9uOiBIVE1MQnV0dG9uRWxlbWVudCB8IG51bGwgfCB1bmRlZmluZWQ7XHJcbiAgICBlcXVhbEJ1dHRvbjogSFRNTEJ1dHRvbkVsZW1lbnQgfCBudWxsIHwgdW5kZWZpbmVkO1xyXG4gICAgcmVzdWx0RGlzcGxheTogSFRNTEVsZW1lbnQgfCBudWxsIHwgdW5kZWZpbmVkO1xyXG4gICAgc3VtbWFyeURpc3BsYXk6IEhUTUxFbGVtZW50IHwgbnVsbCB8IHVuZGVmaW5lZDtcclxufVxyXG5cclxuY2xhc3MgTWFpblZpZXcge1xyXG5cclxuICAgIGNsaWNrRXZlbnQ6IHN0cmluZyA9IFwiY2xpY2tcIjtcclxuICAgIGJ1dHRvbkNvbnRhaW5lckNsYXNzTmFtZTogc3RyaW5nID0gXCIuYnRuLWNvbnRhaW5lclwiO1xyXG4gICAgcmVzdWx0RGlzcGxheUNsYXNzTmFtZTogc3RyaW5nID0gXCIucmVzdWx0LWRpc3BsYXlcIjtcclxuICAgIHN1bW1hcnlEaXNwbGF5Q2xhc3NOYW1lOiBzdHJpbmcgPSBcIi5zdW1tYXJ5LWRpc3BsYXlcIjtcclxuXHJcbiAgICBsZWZ0QXNTdHJpbmc6IHN0cmluZyA9IFwiXCI7XHJcbiAgICBsZWZ0OiBudW1iZXIgPSAwO1xyXG4gICAgcmlnaHQ6IG51bWJlciA9IDA7XHJcbiAgICByaWdodEFzU3RyaW5nOiBzdHJpbmcgPSBcIlwiO1xyXG4gICAgdG90YWw6IG51bWJlciA9IDA7XHJcbiAgICBvcFR5cGU6IE9wZXJhdG9yVHlwZSA9IE9wZXJhdG9yVHlwZS5Ob25lO1xyXG4gICAgb3BUeXBlSHRtbDogc3RyaW5nID0gXCJcIjtcclxuXHJcbiAgICBwcml2YXRlIGRvbTogRG9tID0gbmV3IERvbSgpO1xyXG4gICAgcHJpdmF0ZSBvcHM6IE9wcyA9IG5ldyBPcHMoKTtcclxuXHJcbiAgICBwcml2YXRlIGNhY2hlRG9tKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuZG9tLmJ1dHRvbkNvbnRhaW5lciA9IDxIVE1MRWxlbWVudD5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuYnV0dG9uQ29udGFpbmVyQ2xhc3NOYW1lKTtcclxuICAgICAgICB0aGlzLmRvbS5zdW1tYXJ5RGlzcGxheSA9IDxIVE1MRWxlbWVudD5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuc3VtbWFyeURpc3BsYXlDbGFzc05hbWUpO1xyXG4gICAgICAgIHRoaXMuZG9tLnJlc3VsdERpc3BsYXkgPSA8SFRNTEVsZW1lbnQ+ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLnJlc3VsdERpc3BsYXlDbGFzc05hbWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBiaW5kRXZlbnRzKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmRvbS5idXR0b25Db250YWluZXIgIT09IG51bGwgJiYgdGhpcy5kb20uYnV0dG9uQ29udGFpbmVyICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5kb20uYnV0dG9uQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIodGhpcy5jbGlja0V2ZW50LCB0aGlzLmhhbmRsZUJ0bkNvbnRhaW5lckNsaWNrKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGhhbmRsZUJ0bkNvbnRhaW5lckNsaWNrID0gKGV2ZW50OiBFdmVudCk6IHZvaWQgPT4ge1xyXG4gICAgICAgIC8vIGhhZCB0byBkbyB0aGUgZXZlbnQgaGFuZGxlciB0aGlzIHdheSBpbiBvcmRlciB0byBwYXNzIGFsb25nIHRoZSBjb3JyZWN0ICd0aGlzJ1xyXG4gICAgICAgIC8vICBjb250ZXh0IHRvIGl0XHJcbiAgICAgICAgLy8gc2VlOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xODQyMzQxMC90eXBlc2NyaXB0LXJldGFpbi1zY29wZS1pbi1ldmVudC1saXN0ZW5lclxyXG4gICAgICAgIGxldCBzcmNCdXR0b24gPSA8SFRNTEJ1dHRvbkVsZW1lbnQ+ZXZlbnQuc3JjRWxlbWVudDtcclxuICAgICAgICBpZiAoc3JjQnV0dG9uID09PSBudWxsIHx8IHNyY0J1dHRvbiA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJDYW4ndCBmaW5kIHRoZSBidXR0b24gdGhhdCB3YXMgY2xpY2tlZFwiKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IHNyY0J1dHRvblZhbHVlID0gc3JjQnV0dG9uLmlubmVySFRNTDtcclxuICAgICAgICBpZiAoc3JjQnV0dG9uVmFsdWUgPj0gXCIwXCIgJiYgc3JjQnV0dG9uVmFsdWUgPD0gXCI5XCIpXHJcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlTnVtYmVyQnV0dG9uUHJlc3NlZChzcmNCdXR0b25WYWx1ZSk7XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIGdldCB0aGUgZGF0YSB0aGF0IGtub3dzIHdoYXQgb3BlcmF0b3IgYnV0dG9uIHdhcyBwcmVzc2VkIFxyXG4gICAgICAgICAgICB0aGlzLm9wVHlwZUh0bWwgPSBzcmNCdXR0b25WYWx1ZTtcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVPcGVyYXRvckJ1dHRvblByZXNzZWQoc3JjQnV0dG9uLmdldEF0dHJpYnV0ZShcImRhdGEtb3BUeXBlXCIpKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgaGFuZGxlT3BlcmF0b3JCdXR0b25QcmVzc2VkKG9wUHJlc3NlZDogc3RyaW5nIHwgbnVsbCk6IHZvaWQge1xyXG4gICAgICAgIGlmIChvcFByZXNzZWQgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIk9wZXJhdGlvbiBzZWxlY3RlZCBpcyBudWxsXCIpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKG9wUHJlc3NlZCA9PT0gT3BlcmF0b3JUeXBlLkVxdWFsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29tcHV0ZVRvdGFsKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY2xlYXJTdW1tYXJ5RGlzcGxheSgpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMub3BUeXBlID09PSBPcGVyYXRvclR5cGUuTm9uZSkge1xyXG4gICAgICAgICAgICB0aGlzLm9wVHlwZSA9IDxPcGVyYXRvclR5cGU+b3BQcmVzc2VkO1xyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVN1bW1hcnlEaXNwbGF5KCk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMub3BUeXBlKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5jb21wdXRlVG90YWwoKTtcclxuICAgICAgICAgICAgdGhpcy5vcFR5cGUgPSA8T3BlcmF0b3JUeXBlPm9wUHJlc3NlZDtcclxuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5vcFR5cGUpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY29tcHV0ZVRvdGFsKCk6IHZvaWQge1xyXG5cclxuICAgICAgICB0aGlzLmxlZnQgPSBOdW1iZXIodGhpcy5sZWZ0QXNTdHJpbmcpO1xyXG4gICAgICAgIHRoaXMucmlnaHQgPSBOdW1iZXIodGhpcy5yaWdodEFzU3RyaW5nKTtcclxuXHJcbiAgICAgICAgc3dpdGNoICh0aGlzLm9wVHlwZSkge1xyXG4gICAgICAgICAgICBjYXNlIChPcGVyYXRvclR5cGUuQWRkKToge1xyXG4gICAgICAgICAgICAgICAgdGhpcy50b3RhbCA9IHRoaXMub3BzLmFkZCh0aGlzLmxlZnQsIHRoaXMucmlnaHQpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSAoT3BlcmF0b3JUeXBlLlN1YnRyYWN0KToge1xyXG4gICAgICAgICAgICAgICAgdGhpcy50b3RhbCA9IHRoaXMub3BzLnN1YnRyYWN0KHRoaXMubGVmdCwgdGhpcy5yaWdodCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIChPcGVyYXRvclR5cGUuTXVsdGlwbHkpOiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRvdGFsID0gdGhpcy5vcHMubXVsdGlwbHkodGhpcy5sZWZ0LCB0aGlzLnJpZ2h0KTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhc2UgKE9wZXJhdG9yVHlwZS5EaXZpZGUpOiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRvdGFsID0gdGhpcy5vcHMuZGl2aWRlKHRoaXMubGVmdCwgdGhpcy5yaWdodCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIChPcGVyYXRvclR5cGUuUGx1c01pbnVzKToge1xyXG4gICAgICAgICAgICAgICAgLy8gIG5lZWQgdG8gZGlzcGxheSBuZWdhdGl2ZSBudW1iZXJcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBkZWZhdWx0OiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgT3BlcmF0b3IgJHt0aGlzLm9wVHlwZX0gaXMgbm90IGRlZmluZWRgKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudXBkYXRlU3VtbWFyeURpc3BsYXkoKTtcclxuICAgICAgICB0aGlzLnVwZGF0ZUxlZnRBbmRSaWdodFZhbHVlcygpO1xyXG4gICAgICAgIHRoaXMuZGlzcGxheVJlc3VsdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZGlzcGxheVJlc3VsdCgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5kb20ucmVzdWx0RGlzcGxheSAhPT0gbnVsbCAmJiB0aGlzLmRvbS5yZXN1bHREaXNwbGF5ICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5kb20ucmVzdWx0RGlzcGxheS50ZXh0Q29udGVudCA9IGAke3RoaXMudG90YWx9YDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBkaXNwbGF5TGVmdCgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5kb20ucmVzdWx0RGlzcGxheSAhPT0gbnVsbCAmJiB0aGlzLmRvbS5yZXN1bHREaXNwbGF5ICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5kb20ucmVzdWx0RGlzcGxheS50ZXh0Q29udGVudCA9IHRoaXMubGVmdEFzU3RyaW5nO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGRpc3BsYXlSaWdodCgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5kb20ucmVzdWx0RGlzcGxheSAhPT0gbnVsbCAmJiB0aGlzLmRvbS5yZXN1bHREaXNwbGF5ICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5kb20ucmVzdWx0RGlzcGxheS50ZXh0Q29udGVudCA9IHRoaXMucmlnaHRBc1N0cmluZztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIGNsZWFyU3VtbWFyeURpc3BsYXkoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuZG9tLnN1bW1hcnlEaXNwbGF5ICE9PSBudWxsICYmIHRoaXMuZG9tLnN1bW1hcnlEaXNwbGF5ICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5kb20uc3VtbWFyeURpc3BsYXkuaW5uZXJIVE1MID0gXCJcIlxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSB1cGRhdGVTdW1tYXJ5RGlzcGxheSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5kb20uc3VtbWFyeURpc3BsYXkgPT09IG51bGwgfHwgdGhpcy5kb20uc3VtbWFyeURpc3BsYXkgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiVW5hYmxlIHRvIHBvcHVsYXRlIHN1bW1hcnkgdmFsdWVcIik7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmxlZnRBc1N0cmluZyA9PT0gXCJcIikge1xyXG4gICAgICAgICAgICB0aGlzLmRvbS5zdW1tYXJ5RGlzcGxheS5pbm5lckhUTUwgKz0gdGhpcy5sZWZ0QXNTdHJpbmcgKyBcIiBcIiArIHRoaXMub3BUeXBlSHRtbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5yaWdodEFzU3RyaW5nICE9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZG9tLnN1bW1hcnlEaXNwbGF5LmlubmVySFRNTCArPSB0aGlzLnJpZ2h0QXNTdHJpbmcgKyBcIiBcIiArIHRoaXMub3BUeXBlSHRtbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSB1cGRhdGVMZWZ0QW5kUmlnaHRWYWx1ZXMoKSB7XHJcbiAgICAgICAgdGhpcy5sZWZ0QXNTdHJpbmcgPSB0aGlzLnRvdGFsLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgdGhpcy5sZWZ0ID0gdGhpcy50b3RhbDtcclxuICAgICAgICB0aGlzLnJpZ2h0QXNTdHJpbmcgPSBcIlwiO1xyXG4gICAgICAgIHRoaXMucmlnaHQgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgaGFuZGxlTnVtYmVyQnV0dG9uUHJlc3NlZChwcmVzc2VkTnVtYmVyOiBzdHJpbmcpOiB2b2lkIHtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMubGVmdEFzU3RyaW5nID09PSBcIlwiIHx8IHRoaXMub3BUeXBlID09PSBPcGVyYXRvclR5cGUuTm9uZSkge1xyXG4gICAgICAgICAgICB0aGlzLmxlZnRBc1N0cmluZyArPSBwcmVzc2VkTnVtYmVyO1xyXG4gICAgICAgICAgICB0aGlzLmRpc3BsYXlMZWZ0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnJpZ2h0QXNTdHJpbmcgKz0gcHJlc3NlZE51bWJlcjtcclxuICAgICAgICAgICAgdGhpcy5kaXNwbGF5UmlnaHQoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5jYWNoZURvbSgpO1xyXG4gICAgICAgIHRoaXMuYmluZEV2ZW50cygpO1xyXG4gICAgfVxyXG59XHJcblxyXG4oZnVuY3Rpb24gKCkge1xyXG4gICAgbGV0IG1haW4gPSBuZXcgTWFpblZpZXcoKTtcclxuICAgIG1haW4uaW5pdCgpXHJcbn0oKSk7Il19"}